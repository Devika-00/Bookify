<div class="container-fluid">
  <!--  Row 1 -->
  <div class="row">
    <div class="col-lg-4 col-sm-6">
      <div class="card bg-danger">
        <div class="card-body">
          <h3 class="card-title text-white">Total Sales</h3>
          <div class="d-inline-block">
            <p class="card-text text-white">
              Total Sales Amount: <br />
              <span class="text-white h3">â‚¹ <%= totalSalesAmount %></span>
          </p>
          </div>
          <span class="float-right display-5 opacity-5"
            ><i class="fa fa-shopping-cart"></i
          ></span>
        </div>
      </div>
    </div>
    
    <div class="col-lg-4 col-sm-6">
      <div class="card bg-success">
        <div class="card-body">
          <h3 class="card-title text-white">New Customers</h3>
          <div class="d-inline-block">
            <p class="card-text text-white">
              Users Count: <br />
              <span class="text-white h3"><%= totalActiveUserCount %></span>
          </p>
          </div>
          <span class="float-right display-5 opacity-5"
            ><i class="fa fa-users"></i
          ></span>
        </div>
      </div>
    </div>
    <div class="col-lg-4 col-sm-6">
      <div class="card bg-info">
        <div class="card-body">
          <h3 class="card-title text-white">Total Order</h3>
          <div class="d-inline-block">
            <p class="card-text text-white">
              Total Orders Count: <br />
              <span class="text-white h3"><%= totalOrderCount %></span>
          </p>
          </div>
          <span class="float-right display-5 opacity-5"
            ><i class="fa fa-heart"></i
          ></span>
        </div>
      </div>
    </div>
  </div>

  <div class="row">
     <!-- Graph -->
     <div class="col-lg-9">
        <div class="col-xl-12 col-lg-12">
            <div class="card mb-6">
                <article class="card-body">
                    <h5 class="card-title">Sale statistics</h5>
                    <canvas id="saleChart" height="120px"></canvas>
                </article>
            </div>
        </div>
     </div>
  </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        if ($("#saleChart").length) {
            var saleCtx = document.getElementById("saleChart").getContext("2d");
            var saleChart;

            // Function to generate labels for the chart
            function generateLabels() {
                var currentMonth = new Date().getMonth(); // Get the current month (0-11)
                var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
                var labels = [];

                for (var i = 0; i < 12; i++) {
                    labels.push(monthNames[(currentMonth + i) % 12]);
                }

                return labels;
            }

            // Function to update the chart data
            function updateChart(salesData) {
                if (saleChart) {
                    saleChart.destroy(); // Destroy the existing chart if it exists
                }

                var chartLabels = salesData.map((item) => item.month); // Extract month labels from salesData
                var salesValues = salesData.map((item) => item.sales); // Extract sales values from salesData

                saleChart = new Chart(saleCtx, {
                    type: "line",
                    data: {
                        labels: chartLabels,
                        datasets: [
                            {
                                label: "Sales",
                                tension: 0.3,
                                fill: true,
                                backgroundColor: "rgba(44, 120, 220, 0.2)",
                                borderColor: "rgba(44, 120, 220)",
                                data: salesValues,
                            },
                        ],
                    },
                    options: {
                        plugins: {
                            legend: {
                                labels: {
                                    usePointStyle: true,
                                },
                            },
                        },
                    },
                });
            }

            // Fetch data from the endpoint
            fetch("/admin/sales-data")
                .then((response) => response.json())
                .then((data) => {
                    updateChart(data); // Assuming the response has "sales" and "users" properties
                })
                .catch((error) => {
                    console.error("Error fetching data:", error);
                });
        }
    });
</script>